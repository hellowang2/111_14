#include <stdio.h>
#include <time.h>
#define N 3
// Use Back tracking
int times=0;
int count(int board[N][N],int row,int col);

int main(){//main function
	clock_t start_t,finish_t;
    double total_t = 0;
    start_t=clock();
	int board[N][N]={0};
	int total=count(board,0,0);
	printf("Total:%d\n",total);
	printf("Times:%d\n",times);
	finish_t=clock();
	total_t=(double)(finish_t-start_t)/CLOCKS_PER_SEC;
	printf("Using time:%#.30f\n",total_t);
	return 0;
}

int count(int board[N][N],int row,int col){
	times++;
	if(row==N){//All cells filled,check this arrangement is valid or not
		int sum_of_row[N]={0};
		int sum_of_col[N]={0};
		
		for(int i=0;i<N;i++){
			for(int j=0;j<N;j++){
				sum_of_row[i]+=board[i][j];
				sum_of_col[j]+=board[i][j];
			}
		}
		
		for(int i=0;i<N;i++){
			if(sum_of_row[i]%2!=1||sum_of_col[i]%2!=1){
				return 0;//Invalid
			}
		}
		return 1;//Valid
			}
	
	int nextRow=row;
	int nextCol=col+1;
	
	if(nextCol==N){//If we get end of the column, move to the next row
		nextRow++;
		nextCol=0;
	}
	//Back tracking
	int counts=0;
	board[row][col]=1;//place a soldier
	counts+=count(board,nextRow,nextCol);//recursive
	board[row][col]=0;//Remove a soldier
	counts+=count(board,nextRow,nextCol);//recursive
	return counts;
}
